--- python-pysnmp-4.4.12/pysnmp/carrier/asyncio/dgram/base.py.orig	2022-11-25 15:43:00.890758996 -0500
+++ python-pysnmp-4.4.12/pysnmp/carrier/asyncio/dgram/base.py	2022-11-25 15:45:25.205196357 -0500
@@ -42,7 +42,7 @@
 except ImportError:
     import trollius as asyncio
 
-IS_PYTHON_344_PLUS = platform.python_version_tuple() >= ('3', '4', '4')
+IS_PYTHON_344_PLUS = [int(v) for v in platform.python_version_tuple()] >= [3, 4, 4]
 
 
 class DgramAsyncioProtocol(asyncio.DatagramProtocol, AbstractAsyncioTransport):
--- python-pysnmp-4.4.12/pysnmp/carrier/asyncio/dispatch.py.orig	2022-11-25 15:43:52.814583062 -0500
+++ python-pysnmp-4.4.12/pysnmp/carrier/asyncio/dispatch.py	2022-11-25 15:46:28.858953454 -0500
@@ -41,7 +41,7 @@
 except ImportError:
     import trollius as asyncio
 
-IS_PYTHON_344_PLUS = platform.python_version_tuple() >= ('3', '4', '4')
+IS_PYTHON_344_PLUS = [int(v) for v in platform.python_version_tuple()] >= [3, 4, 4]
 
 class AsyncioDispatcher(AbstractTransportDispatcher):
     """AsyncioDispatcher based on asyncio event loop"""
@@ -68,7 +68,7 @@
                 raise
             except Exception:
                 raise PySnmpError(';'.join(traceback.format_exception(*sys.exc_info())))
-    
+
     def registerTransport(self, tDomain, transport):
         if self.loopingcall is None and self.getTimerResolution() > 0:
             # Avoid deprecation warning for asyncio.async()
