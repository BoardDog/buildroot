diff -ruN WPEWebKit.orig/Source/WebKit/UIProcess/API/wpe/WebKitSecurityOrigin.h WPEWebKit/Source/WebKit/UIProcess/API/wpe/WebKitSecurityOrigin.h
--- WPEWebKit.orig/Source/WebKit/UIProcess/API/wpe/WebKitSecurityOrigin.h	2020-04-16 13:16:46.000000000 +0530
+++ WPEWebKit/Source/WebKit/UIProcess/API/wpe/WebKitSecurityOrigin.h	2020-04-29 18:25:37.448440061 +0530
@@ -17,7 +17,7 @@
  * Boston, MA 02110-1301, USA.
  */
 
-#if !defined(__WEBKIT_H_INSIDE__) && !defined(WEBKIT2_COMPILATION)
+#if !defined(__WEBKIT_H_INSIDE__) && !defined(WEBKIT2_COMPILATION) && !defined(__WEBKIT_WEB_EXTENSION_H_INSIDE__)
 #error "Only <wpe/webkit.h> can be included directly."
 #endif
 
diff -ruN WPEWebKit.orig/Source/WebKit/WebProcess/InjectedBundle/API/glib/WebKitWebExtension.cpp WPEWebKit/Source/WebKit/WebProcess/InjectedBundle/API/glib/WebKitWebExtension.cpp
--- WPEWebKit.orig/Source/WebKit/WebProcess/InjectedBundle/API/glib/WebKitWebExtension.cpp	2020-04-16 13:16:46.000000000 +0530
+++ WPEWebKit/Source/WebKit/WebProcess/InjectedBundle/API/glib/WebKitWebExtension.cpp	2020-04-29 18:20:06.690766111 +0530
@@ -23,6 +23,7 @@
 #include "APIDictionary.h"
 #include "APIInjectedBundleBundleClient.h"
 #include "APIString.h"
+#include "WebKitSecurityOriginPrivate.h"
 #include "WebKitUserMessagePrivate.h"
 #include "WebKitWebExtensionPrivate.h"
 #include "WebKitWebPagePrivate.h"
@@ -122,6 +123,7 @@
 typedef HashMap<WebPage*, GRefPtr<WebKitWebPage> > WebPageMap;
 
 struct _WebKitWebExtensionPrivate {
+    RefPtr<InjectedBundle> bundle;
     WebPageMap pages;
 #if ENABLE(DEVELOPER_MODE)
     bool garbageCollectOnPageDestroy;
@@ -211,6 +213,7 @@
 WebKitWebExtension* webkitWebExtensionCreate(InjectedBundle* bundle)
 {
     WebKitWebExtension* extension = WEBKIT_WEB_EXTENSION(g_object_new(WEBKIT_TYPE_WEB_EXTENSION, NULL));
+    extension->priv->bundle = bundle;
     bundle->setClient(makeUnique<WebExtensionInjectedBundleClient>(extension));
     return extension;
 }
@@ -252,6 +255,33 @@
     return 0;
 }
 
+void webkit_web_extension_add_origin_access_whitelist_entry(WebKitWebExtension* extension, WebKitSecurityOrigin* origin, const char* protocol, const char* host, gboolean allowSubdomains)
+{
+    g_return_if_fail(WEBKIT_IS_WEB_EXTENSION(extension));
+    g_return_if_fail(origin);
+    g_return_if_fail(!webkit_security_origin_is_opaque(origin));
+    g_return_if_fail(protocol);
+
+    extension->priv->bundle->addOriginAccessWhitelistEntry(webkitSecurityOriginGetSecurityOrigin(origin).toString(), String::fromUTF8(protocol), String::fromUTF8(host), host ? allowSubdomains : true);
+}
+
+void webkit_web_extension_remove_origin_access_whitelist_entry(WebKitWebExtension* extension, WebKitSecurityOrigin* origin, const char* protocol, const char* host, gboolean allowSubdomains)
+{
+    g_return_if_fail(WEBKIT_IS_WEB_EXTENSION(extension));
+    g_return_if_fail(origin);
+    g_return_if_fail(!webkit_security_origin_is_opaque(origin));
+    g_return_if_fail(protocol);
+
+    extension->priv->bundle->removeOriginAccessWhitelistEntry(webkitSecurityOriginGetSecurityOrigin(origin).toString(), String::fromUTF8(protocol), String::fromUTF8(host), host ? allowSubdomains : true);
+}
+
+void webkit_web_extension_reset_origin_access_whitelists(WebKitWebExtension* extension)
+{
+    g_return_if_fail(WEBKIT_IS_WEB_EXTENSION(extension));
+
+    extension->priv->bundle->resetOriginAccessWhitelists();
+}
+
 /**
  * webkit_web_extension_send_message_to_context:
  * @extension: a #WebKitWebExtension
diff -ruN WPEWebKit.orig/Source/WebKit/WebProcess/InjectedBundle/API/wpe/webkit-web-extension.h WPEWebKit/Source/WebKit/WebProcess/InjectedBundle/API/wpe/webkit-web-extension.h
--- WPEWebKit.orig/Source/WebKit/WebProcess/InjectedBundle/API/wpe/webkit-web-extension.h	2020-04-16 13:16:46.000000000 +0530
+++ WPEWebKit/Source/WebKit/WebProcess/InjectedBundle/API/wpe/webkit-web-extension.h	2020-04-29 18:25:00.808218565 +0530
@@ -32,6 +32,7 @@
 #include <wpe/WebKitContextMenuItem.h>
 #include <wpe/WebKitFrame.h>
 #include <wpe/WebKitScriptWorld.h>
+#include <wpe/WebKitSecurityOrigin.h>
 #include <wpe/WebKitURIRequest.h>
 #include <wpe/WebKitURIResponse.h>
 #include <wpe/WebKitUserMessage.h>
diff -ruN WPEWebKit.orig/Source/WebKit/WebProcess/InjectedBundle/API/wpe/WebKitWebExtension.h WPEWebKit/Source/WebKit/WebProcess/InjectedBundle/API/wpe/WebKitWebExtension.h
--- WPEWebKit.orig/Source/WebKit/WebProcess/InjectedBundle/API/wpe/WebKitWebExtension.h	2020-04-16 13:16:46.000000000 +0530
+++ WPEWebKit/Source/WebKit/WebProcess/InjectedBundle/API/wpe/WebKitWebExtension.h	2020-04-29 18:19:10.454539952 +0530
@@ -26,6 +26,7 @@
 
 #include <glib-object.h>
 #include <wpe/WebKitDefines.h>
+#include <wpe/WebKitSecurityOrigin.h>
 #include <wpe/WebKitUserMessage.h>
 #include <wpe/WebKitWebPage.h>
 
@@ -84,6 +85,23 @@
                                                      guint64             page_id);
 
 WEBKIT_API void
+webkit_web_extension_add_origin_access_whitelist_entry    (WebKitWebExtension   *extension,
+                                                           WebKitSecurityOrigin *origin,
+                                                           const gchar          *protocol,
+                                                           const gchar          *host,
+                                                           gboolean              allow_subdomains);
+
+WEBKIT_API void
+webkit_web_extension_remove_origin_access_whitelist_entry (WebKitWebExtension   *extension,
+                                                           WebKitSecurityOrigin *origin,
+                                                           const gchar          *protocol,
+                                                           const gchar          *host,
+                                                           gboolean              allow_subdomains);
+
+WEBKIT_API void
+webkit_web_extension_reset_origin_access_whitelists       (WebKitWebExtension   *extension);
+
+WEBKIT_API void
 webkit_web_extension_send_message_to_context        (WebKitWebExtension *extension,
                                                      WebKitUserMessage  *message,
                                                      GCancellable       *cancellable,
