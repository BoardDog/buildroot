From 05547c88c01a97dc0dd0cf3a34b0fb139df45a5e Mon Sep 17 00:00:00 2001
From: Bram Oosterhuis <bram.oosterhuis.nl@gmail.com>
Date: Wed, 10 Aug 2022 21:49:28 +0200
Subject: [PATCH] CMake: Preparation to switch off legacy config generator

---
 CMakeLists.txt                           |  9 ++++++++-
 Source/WPEFramework/GenericConfig.cmake  |  5 +++++
 Tools/cmake/FindConfigGenerator.cmake.in | 17 +++++++++++++----
 cmake/config.cmake                       | 18 ++++++++++++------
 cmake/project.cmake.in                   |  4 ++++
 5 files changed, 42 insertions(+), 11 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2a3f11d5..7e6901e7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -31,6 +31,8 @@ option(HIDE_NON_EXTERNAL_SYMBOLS
     "Hide all non EXTERNAL tagged symbols" ON)
 option(ENABLE_STRICT_COMPILER_SETTINGS
     "Enable compiler flags to get the warnings/errors due to improper condition in the code" OFF) 
+option(LEGACY_CONFIG_GENERATOR
+    "Skip the legacy config generator even it's supported by your cmake version." ON) 
 
 if (BUILD_REFERENCE)
     add_definitions (-DBUILD_REFERENCE=${BUILD_REFERENCE})
@@ -95,9 +97,14 @@ install(FILES "${CMAKE_CURRENT_BINARY_DIR}/${NAMESPACE}.cmake"
         RENAME "${NAMESPACE}Config.cmake"
         DESTINATION lib/cmake/${NAMESPACE})
 
+if (CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
+install(DIRECTORY
+        "${CMAKE_SOURCE_DIR}/cmake/config"
+    DESTINATION lib/cmake/${NAMESPACE})
+endif()
+
 install(DIRECTORY
             "${CMAKE_SOURCE_DIR}/cmake/common"
-            "${CMAKE_SOURCE_DIR}/cmake/config"
             "${CMAKE_SOURCE_DIR}/cmake/templates"
         DESTINATION lib/cmake/${NAMESPACE})
 
diff --git a/Source/WPEFramework/GenericConfig.cmake b/Source/WPEFramework/GenericConfig.cmake
index 048e8e80..5acf1726 100644
--- a/Source/WPEFramework/GenericConfig.cmake
+++ b/Source/WPEFramework/GenericConfig.cmake
@@ -42,6 +42,8 @@ set(ETHERNETCARD_NAME "eth0" CACHE STRING "Ethernet Card name which has to be as
 set(GROUP "" CACHE STRING "Define which system group will be used")
 set(UMASK "" CACHE STRING "Set the permission mask for the creation of new files. e.g. 0760")
 
+
+if(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
 map()
   key(plugins)
   if(MESSAGING)
@@ -304,3 +306,6 @@ install(
         DESTINATION ${CMAKE_INSTALL_PREFIX}/../etc/${NAMESPACE}/
         RENAME config.json
         COMPONENT ${MODULE_NAME})
+else()
+
+endif(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
\ No newline at end of file
diff --git a/Tools/cmake/FindConfigGenerator.cmake.in b/Tools/cmake/FindConfigGenerator.cmake.in
index e3a83c1f..07eadde9 100644
--- a/Tools/cmake/FindConfigGenerator.cmake.in
+++ b/Tools/cmake/FindConfigGenerator.cmake.in
@@ -2,6 +2,7 @@ if(NOT PYTHON_EXECUTABLE)
     find_package(PythonInterp 3.5 REQUIRED QUIET)
 endif()
 
+if(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
 macro(IncludeConfig)
     if(NOT COMMAND map)
         ## includes all cmake files of cmakepp to write json files
@@ -9,7 +10,7 @@ macro(IncludeConfig)
         require("${MODULE_BASE_DIR}/config/*.cmake")
     endif()
 endmacro()
-
+endif(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
 
 # ----------------------------------------------------------------------------------------
 # write_config
@@ -28,7 +29,7 @@ endmacro()
 # ----------------------------------------------------------------------------------------
 function(write_config)
     set(optionsArgs )
-    set(oneValueArgs CLASSNAME LOCATOR COMPONENT)
+    set(oneValueArgs CLASSNAME LOCATOR COMPONENT DISABLE_LEGACY_GENERATOR)
     set(multiValueArgs PLUGINS)
 
     set(CONFIG_GENERATOR_PATH "@GENERATOR_INSTALL_PATH@/ConfigGenerator")
@@ -93,7 +94,13 @@ function(write_config)
         set(_locator lib${MODULE_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX})
     endif()
 
+    if(ARG_DISABLE_LEGACY_GENERATOR)
+        set(LEGACY_CONFIG_GENERATOR OFF)
+    endif(ARG_DISABLE_LEGACY_GENERATOR)
+
+if(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
     IncludeConfig()
+endif(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
 
     foreach(plugin ${_plugins})
         set(config_generated "N")
@@ -127,6 +134,7 @@ function(write_config)
             set(config_generated "Y")
         endif()
 
+if(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
         if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug" OR
                 "${config_generated}" STREQUAL "N")
 
@@ -137,7 +145,7 @@ function(write_config)
             kv(classname ${_classname})
             end()
             ans(plugin_config) # default configuration
-            
+
             if(EXISTS "${CMAKE_CURRENT_LIST_DIR}/${plugin}.config")
                 include(${CMAKE_CURRENT_LIST_DIR}/${plugin}.config)
 
@@ -200,7 +208,7 @@ function(write_config)
                     if(compare_result EQUAL 0)
                         message(STATUS "config json files generated using legacy method and Python ConfigGenerator are identical") 
                     elseif( compare_result EQUAL 1)
-                        message(FATAL_ERROR " Comparing the config json files generated using legacy method and Python ConfigGenerator: \n"
+                        message(AUTHOR_WARNING " Comparing the config json files generated using legacy method and Python ConfigGenerator: \n"
                                             " ${CMAKE_CURRENT_BINARY_DIR}/config/${plugin}_legacy.json and ${CMAKE_CURRENT_BINARY_DIR}/config/${plugin}.json are not identical \n"
                                             " This could mean one of the following: \n"
                                             "    1. Parameters are out of order \n"
@@ -213,6 +221,7 @@ function(write_config)
                 endif()
             endif()
         endif()
+endif(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
 
         install(
                 FILES ${CMAKE_CURRENT_BINARY_DIR}/config/${plugin}.json DESTINATION
diff --git a/cmake/config.cmake b/cmake/config.cmake
index 73699bab..8779e157 100644
--- a/cmake/config.cmake
+++ b/cmake/config.cmake
@@ -1,8 +1,4 @@
-## This is an stripped version of cmakepp
-##
-## https://github.com/toeb/cmakepp
-##
-cmake_minimum_required(VERSION 2.8.7)
+cmake_minimum_required(VERSION 3.7.0)
 
 get_property(is_included GLOBAL PROPERTY INCLUDE_GUARD)
 if(is_included)
@@ -13,7 +9,11 @@ set_property(GLOBAL PROPERTY INCLUDE_GUARD true)
 cmake_policy(SET CMP0007 NEW)
 cmake_policy(SET CMP0012 NEW)
 if(POLICY CMP0054)
-  cmake_policy(SET CMP0054 OLD)
+if(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
+  cmake_policy(SET CMP0054 OLD) # needed for the old config generator
+else()
+  cmake_policy(SET CMP0054 NEW)
+endif(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
 endif()
 # installation dir of cmakepp
 set(CMAKE_BASE_DIR "${CMAKE_CURRENT_LIST_DIR}")
@@ -34,7 +34,13 @@ function(config_dir key)
 	return("${TMP_DIR}")
 endfunction()
 
+if(CMAKE_VERSION VERSION_LESS 3.20.0 AND LEGACY_CONFIG_GENERATOR)
+## This is an stripped version of cmakepp
+##
+## https://github.com/toeb/cmakepp
+##
 ## includes all cmake files of cmakepp 
 include("${CMAKE_BASE_DIR}/config/core/require.cmake")
 
 require("${CMAKE_BASE_DIR}/config/*.cmake")
+endif()
diff --git a/cmake/project.cmake.in b/cmake/project.cmake.in
index bc827714..09a1f9e2 100644
--- a/cmake/project.cmake.in
+++ b/cmake/project.cmake.in
@@ -72,6 +72,10 @@ if(HIDE_NON_EXTERNAL_SYMBOLS)
     set(CMAKE_VISIBILITY_INLINES_HIDDEN 1 CACHE INTERNAL "" FORCE)
 endif()
 
+if(NOT DEFINED LEGACY_CONFIG_GENERATOR)
+    set(LEGACY_CONFIG_GENERATOR @LEGACY_CONFIG_GENERATOR@ CACHE INTERNAL "" FORCE)
+endif()
+
 set(CMAKE_BUILD_TYPE @CMAKE_BUILD_TYPE@ CACHE INTERNAL "" FORCE)
 
 # FIX_ME: Disable fortify source.
-- 
2.34.1

